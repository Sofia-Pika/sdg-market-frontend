{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auctions/auctions.component.html","webpack:///./src/app/auctions/auctions.component.scss","webpack:///./src/app/auctions/auctions.component.ts","webpack:///./src/app/auctions/project-auction/project-auction.component.html","webpack:///./src/app/auctions/project-auction/project-auction.component.scss","webpack:///./src/app/auctions/project-auction/project-auction.component.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/loading/loading.component.html","webpack:///./src/app/loading/loading.component.scss","webpack:///./src/app/loading/loading.component.ts","webpack:///./src/app/login/callback/callback.component.html","webpack:///./src/app/login/callback/callback.component.scss","webpack:///./src/app/login/callback/callback.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.scss","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/repositories/add-repository/add-repository.component.html","webpack:///./src/app/repositories/add-repository/add-repository.component.scss","webpack:///./src/app/repositories/add-repository/add-repository.component.ts","webpack:///./src/app/repositories/edit-repository/edit-repository.component.html","webpack:///./src/app/repositories/edit-repository/edit-repository.component.scss","webpack:///./src/app/repositories/edit-repository/edit-repository.component.ts","webpack:///./src/app/repositories/repositories.component.html","webpack:///./src/app/repositories/repositories.component.scss","webpack:///./src/app/repositories/repositories.component.ts","webpack:///./src/app/routing.module.ts","webpack:///./src/app/services/api/api-contribution.service.ts","webpack:///./src/app/services/api/api-purchase-offer.service.ts","webpack:///./src/app/services/api/api-sell-offer.service.ts","webpack:///./src/app/services/api/api-user.service.ts","webpack:///./src/app/services/api/backend-api.service.ts","webpack:///./src/app/services/api/git-project-api.service.ts","webpack:///./src/app/services/api/user.service.ts","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.scss","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/table/contributions/contributions.component.html","webpack:///./src/app/table/contributions/contributions.component.scss","webpack:///./src/app/table/contributions/contributions.component.ts","webpack:///./src/app/user-show/user-show.component.html","webpack:///./src/app/user-show/user-show.component.scss","webpack:///./src/app/user-show/user-show.component.ts","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.scss","webpack:///./src/app/users/users.component.ts","webpack:///./src/environments/environment-loader.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\"","module.exports = \"\"","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Gitlab Trading';\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RoutingModule } from './routing.module';\nimport { AuthService } from './auth/auth.service';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RepositoriesComponent } from './repositories/repositories.component';\nimport { AddRepositoryComponent } from './repositories/add-repository/add-repository.component';\nimport { EditRepositoryComponent } from './repositories/edit-repository/edit-repository.component';\nimport { AuctionsComponent } from './auctions/auctions.component';\nimport { ProjectAuctionComponent } from './auctions/project-auction/project-auction.component';\nimport { CallbackComponent } from './login/callback/callback.component';\nimport { UsersComponent } from './users/users.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { LoadingComponent } from './loading/loading.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UserShowComponent } from './user-show/user-show.component';\nimport { ContributionsComponent } from './table/contributions/contributions.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { NgbModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        LoginComponent,\n        RepositoriesComponent,\n        AddRepositoryComponent,\n        EditRepositoryComponent,\n        AuctionsComponent,\n        ProjectAuctionComponent,\n        UsersComponent,\n        CallbackComponent,\n        SidebarComponent,\n        LoadingComponent,\n        UserShowComponent,\n        ContributionsComponent,\n        HeaderComponent,\n        FooterComponent,\n        LogoutComponent\n    ],\n    imports: [\n        BrowserModule,\n        RoutingModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n        FormsModule,\n        ToastrModule.forRoot(),\n        BrowserAnimationsModule,\n        NgbModule\n    ],\n    providers: [\n        AuthService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"<main class=\\\"container-fluid page-main-content\\\">\\n  <div class=\\\"row align-items-stretch\\\">\\n    <app-sidebar></app-sidebar>\\n    <div class=\\\"col-12 col-md-8 col-lg-10\\\">\\n      <h1 class=\\\"title\\\">\\n        Auctions\\n      </h1>\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-hover table-striped table-dark\\\">\\n          <thead>\\n            <tr>\\n              <th>Projects</th>\\n              <th>Project total tokens</th>\\n              <th>Your tokens</th>\\n              <th class=\\\"actions\\\">Actions</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr colspan=\\\"6\\\" *ngIf=\\\"projects === null\\\">\\n              <app-loading [visible]=\\\"projects === null\\\"></app-loading>\\n            </tr>\\n\\n            <tr *ngFor=\\\"let project of projects\\\">\\n              <td>\\n                {{ project[0].name }}\\n              </td>\\n              <td>\\n                {{ (project[0].project_value || 0) |number: \\\"1.2-2\\\"}} <i class=\\\"fas fa-fw fa-coins\\\"></i>\\n              </td>\\n              <td>\\n                {{ (project.my_contribution || 0) |number: \\\"1.2-2\\\"}} <i class=\\\"fas fa-fw fa-coins\\\"></i>\\n              </td>\\n              <td class=\\\"actions\\\">\\n                <a [routerLink]=\\\"['/auctions/project', project[0].id]\\\" class=\\\"btn btn-sm btn-warning\\\">\\n                  <i class=\\\"fas fa-fw fa-eye\\\"></i> View\\n                </a>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n      </div>\\n      <!-- <nav aria-label=\\\"Projects navigation\\\">\\n        <ul class=\\\"pagination justify-content-center\\\">\\n          <li class=\\\"page-item disabled\\\">\\n            <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Previous\\\">\\n              <span aria-hidden=\\\"true\\\">\\n                <i class=\\\"fas fa-fw fa-caret-left\\\"></i>\\n              </span>\\n              <span class=\\\"sr-only\\\">Previous</span>\\n            </a>\\n          </li>\\n          <li class=\\\"page-item disabled\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">1</a></li>\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n          <li class=\\\"page-item\\\">\\n            <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Next\\\">\\n              <span aria-hidden=\\\"true\\\">\\n                <i class=\\\"fas fa-fw fa-caret-right\\\"></i>\\n              </span>\\n              <span class=\\\"sr-only\\\">Next</span>\\n            </a>\\n          </li>\\n        </ul>\\n      </nav> -->\\n    </div>\\n  </div>\\n</main>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { GitProjectApiService } from '../services/api/git-project-api.service';\nimport { GitProject } from '../interfaces/git-project';\n\n@Component({\n  selector: 'app-auctions',\n  templateUrl: './auctions.component.html',\n  styleUrls: ['./auctions.component.scss']\n})\nexport class AuctionsComponent implements OnInit {\n\n  title = 'GitHub Trading';\n  public projects: Array<GitProject> = null;\n\n  constructor(private projectsApi: GitProjectApiService) {\n  }\n\n  ngOnInit() {\n    this.projectsApi.getAll().subscribe((projects) => {\n      this.projects = projects;\n    });\n  }\n\n}\n","module.exports = \"<main class=\\\"container-fluid page-main-content\\\">\\n  <div class=\\\"row align-items-stretch\\\">\\n    <app-sidebar></app-sidebar>\\n    <div class=\\\"col-12 col-md-8 col-lg-10\\\">\\n      <h1 class=\\\"title\\\">\\n        {{ currentProject?.name|titlecase }}'s project auction\\n      </h1>\\n\\n      <ul class=\\\"nav nav-tabs\\\" id=\\\"auction-tabs\\\" role=\\\"tablist\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [class.active]=\\\"selectedTab == 1\\\" id=\\\"contribution-hstory-tab\\\" data-toggle=\\\"tab\\\"\\n            data-target=\\\"#contribution-history\\\" role=\\\"tab\\\" aria-controls=\\\"contribution-history\\\" aria-selected=\\\"true\\\"\\n            target=\\\"_self\\\" (click)=\\\"selectedTab = 1;\\\">Contribution\\n            history</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [class.active]=\\\"selectedTab == 2\\\" id=\\\"selling-offers-tab\\\" data-toggle=\\\"tab\\\" data-target=\\\"#selling-offers\\\"\\n            role=\\\"tab\\\" aria-controls=\\\"selling-offers\\\" aria-selected=\\\"false\\\" target=\\\"_self\\\" (click)=\\\"selectedTab = 2;\\\">Selling\\n            offers</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [class.active]=\\\"selectedTab == 3\\\" id=\\\"buying-offers-tab\\\" data-toggle=\\\"tab\\\" data-target=\\\"#buying-offers\\\"\\n            role=\\\"tab\\\" aria-controls=\\\"buying-offers\\\" aria-selected=\\\"false\\\" target=\\\"_self\\\" (click)=\\\"selectedTab = 3;\\\">Buying\\n            offers</a>\\n        </li>\\n      </ul>\\n      <div class=\\\"tab-content\\\" id=\\\"auction-tab-content\\\">\\n        <div class=\\\"tab-pane fade\\\" [class.show]=\\\"selectedTab == 1\\\" [class.active]=\\\"selectedTab == 1\\\" id=\\\"contribution-history\\\"\\n          role=\\\"tabpanel\\\" aria-labelledby=\\\"contribution-history-tab\\\">\\n          <h3>Contributions</h3>\\n          <div class=\\\"table-responsive\\\">\\n            <app-table-contributions [git-project]=\\\"currentProject\\\"></app-table-contributions>\\n          </div>\\n          <nav aria-label=\\\"Projects navigation\\\">\\n            <ul class=\\\"pagination justify-content-center\\\">\\n              <li class=\\\"page-item disabled\\\">\\n                <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Previous\\\">\\n                  <span aria-hidden=\\\"true\\\">\\n                    <i class=\\\"fas fa-fw fa-caret-left\\\"></i>\\n                  </span>\\n                  <span class=\\\"sr-only\\\">Previous</span>\\n                </a>\\n              </li>\\n              <li class=\\\"page-item disabled\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">1</a></li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n              <li class=\\\"page-item\\\">\\n                <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Next\\\">\\n                  <span aria-hidden=\\\"true\\\">\\n                    <i class=\\\"fas fa-fw fa-caret-right\\\"></i>\\n                  </span>\\n                  <span class=\\\"sr-only\\\">Next</span>\\n                </a>\\n              </li>\\n            </ul>\\n          </nav>\\n        </div>\\n        <div class=\\\"tab-pane fade\\\" [class.show]=\\\"selectedTab == 2\\\" [class.active]=\\\"selectedTab == 2\\\" id=\\\"selling-offers\\\"\\n          role=\\\"tabpanel\\\" aria-labelledby=\\\"selling-offers-tab\\\">\\n          <h3>Selling offers</h3>\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-hover table-striped table-dark\\\">\\n              <thead>\\n                <tr>\\n                  <th>User</th>\\n                  <th>Token offered</th>\\n                  <th>Date</th>\\n                  <th>Price (sdg)/token</th>\\n                  <th>Expire</th>\\n                  <th class=\\\"actions\\\">Action</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngIf=\\\"currentSales === null\\\">\\n                  <app-loading></app-loading>\\n                </tr>\\n                <tr *ngFor=\\\"let sale of currentSales\\\">\\n                  <td>\\n                    <a href=\\\"https://github.com/{{ sale.seller?.username }}\\\">\\n                      @{{ sale.seller?.username }}\\n                    </a>\\n                  </td>\\n                  <td>\\n                    {{ sale.remaining_tokens }} / {{ sale.number_of_tokens }} <i class=\\\"fas fa-fw fa-coins\\\"></i>\\n                  </td>\\n                  <td>\\n                    {{ sale.offer_starts_utc_date }}\\n                  </td>\\n                  <td>\\n                    <span class=\\\"badge badge-warning\\\">\\n                      <i class=\\\"fas fa-fw fa-money-bill\\\"></i>\\n                      {{ sale.sell_price_per_token | number : \\\"1.2-4\\\" }} SDG\\n                    </span>\\n                  </td>\\n                  <td>\\n                    {{ sale.offer_expires_at_utc_date }}\\n                  </td>\\n                  <td class=\\\"actions\\\">\\n                    <a class=\\\"btn btn-dark\\\" data-toggle=\\\"modal\\\" (click)=\\\"buyTokens(buyModalForm, sale)\\\" aria-controls=\\\"buy-modal\\\">\\n                      <i class=\\\"fas fa-fw fa-shopping-cart\\\"></i> Buy\\n                    </a>\\n                  </td>\\n                </tr>\\n              </tbody>\\n              <tfoot>\\n                <tr>\\n                  <th colspan=\\\"5\\\" class=\\\"text-right\\\">\\n\\n                  </th>\\n                  <th>\\n                    <a class=\\\"btn btn-dark\\\" data-toggle=\\\"modal\\\" data-target=\\\"#new-offer-modal\\\" aria-controls=\\\"new-offer-modal\\\">\\n                      <i class=\\\"fas fa-fw fa-gavel\\\"></i> New offer\\n                    </a>\\n                  </th>\\n                </tr>\\n              </tfoot>\\n            </table>\\n\\n          </div>\\n          <nav aria-label=\\\"Projects navigation\\\">\\n            <ul class=\\\"pagination justify-content-center\\\">\\n              <li class=\\\"page-item disabled\\\">\\n                <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Previous\\\">\\n                  <span aria-hidden=\\\"true\\\">\\n                    <i class=\\\"fas fa-fw fa-caret-left\\\"></i>\\n                  </span>\\n                  <span class=\\\"sr-only\\\">Previous</span>\\n                </a>\\n              </li>\\n              <li class=\\\"page-item disabled\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">1</a></li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n              <li class=\\\"page-item\\\">\\n                <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Next\\\">\\n                  <span aria-hidden=\\\"true\\\">\\n                    <i class=\\\"fas fa-fw fa-caret-right\\\"></i>\\n                  </span>\\n                  <span class=\\\"sr-only\\\">Next</span>\\n                </a>\\n              </li>\\n            </ul>\\n          </nav>\\n        </div>\\n        <div class=\\\"tab-pane fade\\\" [class.show]=\\\"selectedTab == 3\\\" [class.active]=\\\"selectedTab == 3\\\" id=\\\"buying-offers\\\"\\n          role=\\\"tabpanel\\\" aria-labelledby=\\\"buying-offers-tab\\\">\\n          <h3>Buying offers</h3>\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-hover table-striped table-dark\\\">\\n              <thead>\\n                <tr>\\n                  <th>User</th>\\n                  <th>Number of tokens to buy</th>\\n                  <th>Proposed amount / token</th>\\n                  <th>Date</th>\\n                  <th>Expire</th>\\n                  <th class=\\\"actions\\\">Action</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngIf=\\\"currentPurchaseOffers === null\\\">\\n                  <app-loading></app-loading>\\n                </tr>\\n                <tr *ngFor=\\\"let offer of currentPurchaseOffers\\\">\\n                  <td>\\n                    <a href=\\\"https://github.com/{{ offer.purchaser?.username }}\\\">\\n                      @{{ offer.purchaser?.username }}\\n                    </a>\\n                  </td>\\n                  <td>\\n                    {{ offer.number_of_tokens }} <i class=\\\"fas fa-fw fa-coins\\\"></i>\\n                  </td>\\n                  <td>\\n                    {{ offer.purchase_price_per_token }} <i class=\\\"fas fa-fw fa-coins\\\"></i>\\n                  </td>\\n                  <td>\\n                    {{ offer.offer_starts_utc_date }}\\n                  </td>\\n                  <td>\\n                    {{ offer.offer_expires_at_utc_date }}\\n                  </td>\\n                  <td class=\\\"actions\\\">\\n                    <a class=\\\"btn btn-dark\\\" data-toggle=\\\"modal\\\" data-target=\\\"#new-offer-modal\\\" aria-controls=\\\"new-offer-modal\\\">\\n                      <i class=\\\"fas fa-fw fa-coins\\\"></i> Sell to this price\\n                    </a>\\n                  </td>\\n                </tr>\\n              </tbody>\\n              <tfoot>\\n                <tr>\\n                  <th colspan=\\\"4\\\" class=\\\"text-right\\\">\\n\\n                  </th>\\n                  <th>\\n                    <a class=\\\"btn btn-dark\\\" data-toggle=\\\"modal\\\" data-target=\\\"#new-purchase-offer-modal\\\" aria-controls=\\\"new-purchase-offer-modal\\\">\\n                      <i class=\\\"fas fa-fw fa-gavel\\\"></i> New purchase offer\\n                    </a>\\n                  </th>\\n                </tr>\\n              </tfoot>\\n            </table>\\n\\n          </div>\\n          <nav aria-label=\\\"Projects navigation\\\">\\n            <ul class=\\\"pagination justify-content-center\\\">\\n              <li class=\\\"page-item disabled\\\">\\n                <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Previous\\\">\\n                  <span aria-hidden=\\\"true\\\">\\n                    <i class=\\\"fas fa-fw fa-caret-left\\\"></i>\\n                  </span>\\n                  <span class=\\\"sr-only\\\">Previous</span>\\n                </a>\\n              </li>\\n              <li class=\\\"page-item disabled\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">1</a></li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n              <li class=\\\"page-item\\\">\\n                <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Next\\\">\\n                  <span aria-hidden=\\\"true\\\">\\n                    <i class=\\\"fas fa-fw fa-caret-right\\\"></i>\\n                  </span>\\n                  <span class=\\\"sr-only\\\">Next</span>\\n                </a>\\n              </li>\\n            </ul>\\n          </nav>\\n        </div>\\n      </div>\\n\\n      <!-- Buy modal -->\\n      <ng-template #buyModalForm>\\n        <div class=\\\"\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h5 class=\\\"modal-title\\\" id=\\\"buy-modal-title\\\">Buy tokens</h5>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"closeBuyModalForm()\\\">\\n                <span aria-hidden=\\\"true\\\"><i class=\\\"fas fa-fw fa-times\\\"></i></span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <form (ngSubmit)=\\\"submitBuyingForm()\\\" [formGroup]=\\\"buyForm\\\" [ngClass]=\\\"{'submitted': buyFormSumitted}\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-sm-7\\\" for=\\\"number-of-tokens\\\">\\n                    Number of tokens\\n                  </label>\\n                  <div class=\\\"col-sm-5\\\">\\n                    <div class=\\\"input-group\\\">\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"number-of-tokens\\\" placeholder=\\\"Tokens\\\" min=\\\"1\\\" step=\\\"1\\\"\\n                        formControlName=\\\"nb_tokens\\\" (input)=\\\"onNbOfTokensToBuyChange($event.target.value, totalPrice)\\\">\\n                      <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                          <i class=\\\"fas fa-fw fa-coins\\\"></i>\\n                        </span>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"buyForm.get('nb_tokens').errors\\\">\\n                      {{ buyForm.get('nb_tokens').errors.nbTokens }}\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-sm-7\\\" for=\\\"value-of-tokens\\\">\\n                    Total\\n                  </label>\\n                  <div class=\\\"col-sm-5\\\">\\n                    <div class=\\\"input-group\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"value-of-tokens\\\" placeholder=\\\"Total\\\" #totalPrice\\n                        disabled>\\n                      <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                          <i class=\\\"fas fa-fw fa-money-bill\\\"></i>\\n                        </span>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <div class=\\\"col-sm-12 text-right\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn\\\"><i class=\\\"fas fa-fw fa-shopping-cart\\\"></i> Buy</button>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </ng-template>\\n\\n      <!-- New offer modal -->\\n      <div class=\\\"modal fade\\\" id=\\\"new-offer-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"new-offer-modal-title\\\"\\n        aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h5 class=\\\"modal-title\\\" id=\\\"new-offer-modal-title\\\">Sell tokens</h5>\\n              <button #sellModalCloseButton type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                <span aria-hidden=\\\"true\\\"><i class=\\\"fas fa-fw fa-times\\\"></i></span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <form [formGroup]=\\\"sellForm\\\" (ngSubmit)=\\\"submitSellForm()\\\" [ngClass]=\\\"{'submitted': sellFormSubmitted}\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-sm-7\\\" for=\\\"number-of-tokens-to-sell\\\">\\n                    Number of tokens to sell\\n                  </label>\\n                  <div class=\\\"col-sm-5\\\">\\n                    <div class=\\\"input-group\\\">\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"number-of-tokens-to-sell\\\" placeholder=\\\"Tokens\\\" min=\\\"1\\\"\\n                        step=\\\"1\\\" formControlName=\\\"number_of_tokens\\\" [ngClass]=\\\"{ 'is-invalid': sellFormSubmitted && sellForm.get('number_of_tokens').errors }\\\">\\n                      <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                          <i class=\\\"fas fa-fw fa-coins\\\"></i>\\n                        </span>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"sellForm.get('number_of_tokens').errors\\\">\\n                      Please provide the number of tokens to sell.\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-sm-7\\\" for=\\\"number-of-tokens-to-sell\\\">\\n                    Price per token\\n                  </label>\\n                  <div class=\\\"col-sm-5\\\">\\n                    <div class=\\\"input-group\\\">\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"price-per-token\\\" placeholder=\\\"Tokens\\\" min=\\\"1\\\" step=\\\"1\\\"\\n                        formControlName=\\\"sell_price_per_token\\\" [ngClass]=\\\"{ 'is-invalid': sellFormSubmitted && sellForm.get('sell_price_per_token').errors }\\\">\\n                      <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                          <i class=\\\"fas fa-fw fa-money-bill\\\"></i>\\n                        </span>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"sellForm.get('sell_price_per_token').errors\\\">\\n                      Please provide the price per token.\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                  <div class=\\\"col-sm-12 text-right\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn\\\"><i class=\\\"fas fa-fw fa-gavel\\\"></i> Sell</button>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- New purchase offer-->\\n      <div class=\\\"modal fade\\\" id=\\\"new-purchase-offer-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"new-purchase-offer-modal-title\\\"\\n        aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h5 class=\\\"modal-title\\\" id=\\\"new-purchase-offer-modal-title\\\">Purchase offer</h5>\\n              <button #purchaseOfferModalCloseButton type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                <span aria-hidden=\\\"true\\\"><i class=\\\"fas fa-fw fa-times\\\"></i></span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <form [formGroup]=\\\"purchaseOfferForm\\\" (ngSubmit)=\\\"submitPurchaseOfferForm()\\\" [ngClass]=\\\"{'submitted': purchaseOfferFormSubmitted}\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-sm-7\\\" for=\\\"number-of-tokens-to-purchase\\\">\\n                    Number of tokens to purchase\\n                  </label>\\n                  <div class=\\\"col-sm-5\\\">\\n                    <div class=\\\"input-group\\\">\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"number-of-tokens-to-purchase\\\" placeholder=\\\"Tokens\\\"\\n                        min=\\\"1\\\" step=\\\"1\\\" formControlName=\\\"number_of_tokens\\\" [ngClass]=\\\"{ 'is-invalid': purchaseOfferFormSubmitted && purchaseOfferForm.get('number_of_tokens').errors }\\\">\\n                      <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                          <i class=\\\"fas fa-fw fa-coins\\\"></i>\\n                        </span>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"purchaseOfferForm.get('number_of_tokens').errors\\\">\\n                      Please provide the number of tokens to purchase.\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-sm-7\\\" for=\\\"number-of-tokens-to-purchase-offer\\\">\\n                    Price per token\\n                  </label>\\n                  <div class=\\\"col-sm-5\\\">\\n                    <div class=\\\"input-group\\\">\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"price-per-token\\\" placeholder=\\\"Tokens\\\" min=\\\"1\\\" step=\\\"1\\\"\\n                        formControlName=\\\"purchase_price_per_token\\\" [ngClass]=\\\"{ 'is-invalid': purchaseOfferFormSubmitted && purchaseOfferForm.get('purchase_price_per_token').errors }\\\">\\n                      <div class=\\\"input-group-append\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                          <i class=\\\"fas fa-fw fa-money-bill\\\"></i>\\n                        </span>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"purchaseOfferForm.get('purchase_price_per_token').errors\\\">\\n                      Please provide the price per token.\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                  <div class=\\\"col-sm-12 text-right\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn\\\"><i class=\\\"fas fa-fw fa-gavel\\\"></i> Create purchase offer</button>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</main>\"","module.exports = \"\"","import { Component, OnInit, Input, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiSellOfferService } from 'src/app/services/api/api-sell-offer.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { SellOffer } from 'src/app/interfaces/sell-offer';\nimport { ApiPurchaseOfferService } from 'src/app/services/api/api-purchase-offer.service';\nimport { PurchaseOffer } from 'src/app/interfaces/purchase-offer';\nimport { Contribution } from 'src/app/interfaces/contribution';\nimport { GitProject } from 'src/app/interfaces/git-project';\nimport { GitProjectApiService } from 'src/app/services/api/git-project-api.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-project-auction',\n  templateUrl: './project-auction.component.html',\n  styleUrls: ['./project-auction.component.scss']\n})\nexport class ProjectAuctionComponent implements OnInit {\n\n  title = 'GitHub Trading';\n  selectedTab = 1;\n  public sellForm: FormGroup;\n  public purchaseOfferForm: FormGroup;\n  public buyForm: FormGroup;\n\n  public projectId: number;\n  public sellFormSubmitted = false;\n  public purchaseOfferFormSubmitted = false;\n  public buyFormSumitted = false;\n  public currentSellFormBuying: SellOffer;\n\n  public currentSales: Array<SellOffer> = null;\n  public currentPurchaseOffers: Array<PurchaseOffer> = null;\n  public currentContributions: Array<Contribution>;\n  public currentProject: GitProject;\n\n  @ViewChild('sellModalCloseButton') sellModalCloseButton: ElementRef;\n  @ViewChild('purchaseOfferModalCloseButton') purchaseOfferModalCloseButton: ElementRef;\n\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private sellOfferApi: ApiSellOfferService,\n    private purchaseOfferApi: ApiPurchaseOfferService, public toastr: ToastrService, public router: Router,\n    private projecApi: GitProjectApiService, private sellApi: ApiSellOfferService, private modalService: NgbModal,\n    private authService: AuthService) {\n  }\n\n  private generateSellingForm() {\n    this.sellFormSubmitted = false;\n    this.sellForm = this.fb.group({\n      number_of_tokens: [1, [\n        Validators.required\n      ]],\n      sell_price_per_token: [1, [\n        Validators.required\n      ]],\n      project: [this.projectId, [\n        Validators.required\n      ]]\n    });\n  }\n\n  private generateBuyForm(sellForm: number) {\n\n    this.buyFormSumitted = false;\n    this.buyForm = this.fb.group({\n      nb_tokens: [0, [\n        Validators.required\n      ]],\n      sell_offer: [sellForm, [\n        Validators.required\n      ]]\n    });\n  }\n\n  private generatePurchaseOfferForm() {\n    this.purchaseOfferFormSubmitted = false;\n\n    this.purchaseOfferForm = this.fb.group({\n      number_of_tokens: [1, [\n        Validators.required\n      ]],\n      purchase_price_per_token: [1, [\n        Validators.required\n      ]],\n      project: [this.projectId, [\n        Validators.required\n      ]]\n    });\n  }\n\n  ngOnInit() {\n    this.projectId = this.route.snapshot.params[\"id\"];\n\n    this.projecApi.get(this.projectId).toPromise().then(project => {\n      this.currentProject = project;\n    }).catch(err => {\n      console.log(err);\n    })\n\n    this.generateSellingForm();\n    this.generatePurchaseOfferForm();\n    this.refreshSellOffer();\n    this.refreshPurchasesOffer();\n  }\n\n  public refreshSellOffer() {\n    this.sellOfferApi.getAll(this.projectId).toPromise().then(sales => {\n      this.currentSales = sales;\n      console.log(\"Selling offers\", sales);\n    });\n  }\n\n  public buyTokens(modalForm, sellOffer: SellOffer) {\n    console.log(\"Offer selected\", sellOffer, modalForm);\n    this.modalService.open(modalForm);\n    this.currentSellFormBuying = sellOffer;\n    this.generateBuyForm(sellOffer.id);\n  }\n\n  public closeBuyModalForm() {\n    this.modalService.dismissAll();\n  }\n\n  public refreshPurchasesOffer() {\n    this.purchaseOfferApi.getAll(this.projectId).toPromise().then(purchasesOffer => {\n      this.currentPurchaseOffers = purchasesOffer;\n      console.log(\"Purchases offers\", purchasesOffer);\n    });\n  }\n\n  public onNbOfTokensToBuyChange(nbOfTokens: number, totalPriceField: HTMLInputElement) {\n    let totalPrice = nbOfTokens * parseFloat(this.currentSellFormBuying.sell_price_per_token);\n    totalPriceField.value = totalPrice.toFixed(2);\n  }\n\n  public submitSellForm() {\n    const formValue = this.sellForm.value;\n\n    this.sellFormSubmitted = true;\n    if (this.sellForm.valid) {\n      this.sellOfferApi.create(formValue).toPromise().then((data) => {\n        this.sellModalCloseButton.nativeElement.click();\n        this.generateSellingForm();\n        this.refreshSellOffer();\n        console.log(\"success\", data);\n        this.toastr.success(\"The data have been saved successfully\", \"Data saved\");\n      }).catch(error => {\n        console.log(error);\n        this.toastr.error(\"An error occurred while saving your data\", error);\n      });\n    }\n  }\n\n\n  public submitBuyingForm() {\n    const formValue = this.buyForm.value;\n\n    this.buyFormSumitted = true;\n    if (this.buyForm.valid) {\n      this.sellApi.buy(formValue).toPromise().then((data) => {\n        this.authService.refreshUser();\n        this.sellModalCloseButton.nativeElement.click();\n        this.closeBuyModalForm();\n        this.refreshSellOffer();\n        this.toastr.success(\"Your transaction is complete\", \"Transaction complete\");\n      }).catch(error => {\n        console.log(error);\n        this.toastr.error(\"An error occurred while saving your data\", error);\n        console.log(\"ERROR\", error.error.errors.children);\n        if (error.error && error.error.errors && error.error.errors.children && error.error.errors.children.nbTokens.errors) {\n          console.log(\"there is an error\");\n          this.buyForm.get(\"nb_tokens\").setErrors({\n            \"nbTokens\": error.error.errors.children.nbTokens.errors.join(\"<br>\")\n          });\n        }\n\n      });\n    }\n  }\n\n\n  public submitPurchaseOfferForm() {\n    const formValue = this.purchaseOfferForm.value;\n    this.purchaseOfferFormSubmitted = true;\n    if (this.purchaseOfferForm.valid) {\n      this.purchaseOfferApi.create(formValue).toPromise().then((data) => {\n        this.purchaseOfferModalCloseButton.nativeElement.click();\n        this.generatePurchaseOfferForm();\n        this.refreshPurchasesOffer();\n        this.toastr.success(\"The data have been saved successfully\", \"Data saved\");\n      }).catch(error => {\n        console.log(error);\n        this.toastr.error(\"An error occurred while saving your data\", error);\n      });\n    }\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { ApiUserService } from '../services/api/api-user.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    /**\n     *\n     * @param router\n     * @param userService\n     */\n    constructor(\n        private router: Router,\n        private userService: ApiUserService\n    ) {\n    }\n\n    /**\n     *\n     * @param next\n     * @param state\n     */\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\n        let role = next.data.expectedRole;\n\n        return this.userService.getMe()\n            .pipe(\n                map(user => {\n                    if (user !== null && user !== false && this.hasTheRole(user, role)) {\n                        return true;\n                    }\n                    this.router.navigate(['login']);\n                    return false;\n                }),\n                catchError((error) => {\n                    this.router.navigate(['login']);\n                    return Observable.throw(false);\n                })\n            );\n    }\n\n    /**\n     * If no role add then its simple user, or else check if user has this role in his ROLE array from API response\n     * @param role\n     */\n    public hasTheRole(user, role): boolean {\n        if (!user) {\n            return false;\n        }\n\n        if (role) {\n            return user.roles.includes(role);\n        }\n\n        return true;\n    }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UserService } from \"../services/api/user.service\";\nimport { User } from '../interfaces/user';\n\n@Injectable()\nexport class AuthService {\n    public authenticationEvent: EventEmitter<User> = new EventEmitter();\n    private environment;\n    constructor(private router: Router, private http: HttpClient, private userService: UserService) {\n        this.refreshUser();\n        this.environment = JSON.parse(localStorage.getItem(\"APP_SETTINGS\"));\n    }\n\n    login() {\n        let url = `${this.environment.githubAuth.URL}?scope=${this.environment.githubAuth.SCOPE}`;\n        url += `&state=${this.generateRandomState()}&response_type=code&approval_prompt=auto`;\n        url += `&redirect_uri=${this.environment.githubAuth.REDIRECT_URI}&client_id=${this.environment.githubAuth.CLIENT_ID}`;\n\n        window.location.href = url;\n    }\n\n    verifyCodeAndState(code, state): Observable<any> {\n        const url = this.environment.baseAPIUrl + 'connect/github/check';\n        return this.http.get(`${url}?code=${code}&state=${state}`);\n    }\n\n    logout() {\n        localStorage.removeItem(this.environment.localStorageJWT);\n        localStorage.removeItem(\"CURRENT_USER\");\n        this.authenticationEvent.emit(null);\n    }\n\n    logInUser(response) {\n        localStorage.setItem(this.environment.localStorageJWT, response.token);\n        this.refreshUser();\n    }\n\n    refreshUser() {\n        console.log(\"refreshing user\");\n        this.userService.getMe().toPromise().then(user => {\n            this.authenticationEvent.emit(user);\n            if (user) {\n                localStorage.setItem(\"CURRENT_USER\", JSON.stringify(user));\n            } else {\n                this.logout();\n            }\n\n        }).catch(err => {\n            console.log(\"authentication error\");\n        });\n    }\n\n    generateRandomState() {\n        return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    }\n\n}\n","module.exports = \"<!-- <footer class=\\\"page-footer\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-8\\\">\\n        <p>\\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam consequatur, consequuntur deserunt\\n          dignissimos doloribus et impedit nesciunt odio perspiciatis praesentium quo temporibus veniam veritatis. Eius\\n          quo, reprehenderit! Aliquid, in, voluptate.\\n        </p>\\n      </div>\\n      <div class=\\\"col-12 col-md-4\\\">\\n        <p class=\\\"text-right footer-links\\\">\\n          <a href=\\\"#\\\">Terms of use</a>\\n          <a href=\\\"#\\\">Privacy policy</a>\\n        </p>\\n        <p class=\\\"text-right\\\">\\n          &copy; 2018 All rights reserved.\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n</footer> -->\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<header class=\\\"container-fluid page-header\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <nav class=\\\"navbar navbar-expand-lg navbar-dark\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n          SDG Market\\n        </a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#header-navigation\\\"\\n          aria-controls=\\\"header-navigation\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"header-navigation\\\">\\n          <ul class=\\\"navbar-nav ml-auto\\\">\\n\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" [routerLink]=\\\"['/logout']\\\" *ngIf=\\\"currentUser\\\">Log out [{{ currentUser.username }}]</a>\\n              <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\" *ngIf=\\\"!currentUser\\\">Login</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"currentUser\\\">\\n              <a href=\\\"javascript:;\\\" class=\\\"nav-link\\\">\\n                <span class=\\\"badge badge-warning\\\">\\n                  <i class=\\\"fas fa-fw fa-money-bill\\\"></i>\\n                  {{ (currentUser.sold_sdg || 0) | number : \\\"1.2-3\\\" }} SDG\\n                </span>\\n              </a>\\n\\n            </li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </div>\\n  </div>\\n</header>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../interfaces/user';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  public currentUser: User;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.currentUser = localStorage.getItem(\"CURRENT_USER\") ? JSON.parse(localStorage.getItem(\"CURRENT_USER\")) : null;\n    this.authService.authenticationEvent.subscribe(user => {\n      this.currentUser = user;\n    });\n  }\n\n}\n","module.exports = \"<p *ngIf=\\\"visible\\\">\\n  Loading content...\\n</p>\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\n\n\n\nexport class LoadingComponent implements OnInit {\n  @Input(\"visible\") visible: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<main class=\\\"container page-main-content\\\">\\n  <div class=\\\"row align-items-center\\\">\\n    <div class=\\\"col col-md-8 offset-md-2\\\">\\n\\n      <div class=\\\"jumbotron\\\" *ngIf=\\\"!error\\\">\\n\\n        <h1 class=\\\"title\\\">Login with your Github account</h1>\\n        <p>Please wait while we are negociating with your Github account</p>\\n\\n      </div>\\n\\n      <div class=\\\"jumbotron\\\" *ngIf=\\\"error\\\">\\n        <h1 class=\\\"title\\\">Login with your Github account</h1>\\n        <div class=\\\"alert alert-danger\\\">\\n          <strong>Error during authentication!</strong>\\n          {{ error }}\\n        </div>\\n        <button class=\\\"btn btn-block btn-default\\\" (click)=\\\"connectGitHub()\\\"><i class=\\\"fab fa-github\\\"></i> Click to\\n          try again!</button>\\n      </div>\\n    </div>\\n  </div>\\n</main>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../auth/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'app-callback',\n    templateUrl: './callback.component.html',\n    styleUrls: ['./callback.component.scss']\n})\nexport class CallbackComponent implements OnInit {\n    public error: string;\n    constructor(private auth: AuthService, private route: ActivatedRoute, private router: Router) {\n    }\n\n    ngOnInit() {\n        let self = this;\n        const code: string = this.route.snapshot.queryParamMap.get('code');\n        const state: string = this.route.snapshot.queryParamMap.get('state');\n        this.auth.verifyCodeAndState(code, state)\n            .subscribe(\n                response => {\n                    this.auth.logInUser(response);\n                    this.router.navigate(['/auctions']);\n                },\n                error => {\n                    // TODO: Better error handling\n\n                    if (error.error && error.error.error_description) {\n                        self.error = error.error.error_description;\n                    }\n\n                    if (error.error && error.error.message) {\n                        self.error = error.error.message;\n                    }\n                });\n    }\n\n    connectGitHub() {\n        this.auth.login();\n    }\n\n}\n","module.exports = \"<main class=\\\"container page-main-content\\\">\\n  <div class=\\\"row align-items-center\\\">\\n    <div class=\\\"col col-md-8 offset-md-2\\\">\\n      <div class=\\\"jumbotron\\\">\\n        <h1 class=\\\"title\\\">Login with GitHub</h1>\\n        <button class=\\\"btn btn-block btn-default\\\" (click)=\\\"connectGitHub()\\\"><i class=\\\"fab fa-github\\\"></i> Click to\\n          connect with GitHub!</button>\\n      </div>\\n    </div>\\n  </div>\\n</main>\"","module.exports = \":host .page-main-content {\\n  justify-content: space-around; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\n\n@Component( {\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: [ './login.component.scss' ]\n} )\nexport class LoginComponent implements OnInit {\n\n  title = 'GitHub Trading';\n\n  constructor( private router: Router, public auth: AuthService ) {\n  }\n\n  ngOnInit() {\n  }\n\n  connectGitHub() {\n    this.auth.login();\n  }\n\n}\n","module.exports = \"Loging out...\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.logout();\n    this.router.navigate([\"/auctions\"]);\n  }\n\n}\n","module.exports = \"<main class=\\\"container-fluid page-main-content\\\">\\n  <div class=\\\"row align-items-stretch\\\">\\n    <app-sidebar></app-sidebar>\\n    <div class=\\\"col-12 col-md-8 col-lg-10\\\">\\n      <h1 class=\\\"title\\\">\\n        Add repository\\n      </h1>\\n      <app-loading [visible]=\\\"project === null\\\"></app-loading>\\n      <form *ngIf=\\\"project\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitForm()\\\" [ngClass]=\\\"{'submitted': submitted}\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-2\\\" for=\\\"git-name\\\">\\n                Git name\\n              </label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"git-name\\\" placeholder=\\\"Repository name\\\" formControlName=\\\"name\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && form.get('name').errors }\\\">\\n                <div class=\\\"error invalid-feedback\\\" *ngIf=\\\"form.get('name').errors\\\">\\n                  Git name is required\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-2\\\" for=\\\"git-address\\\">\\n                Git address\\n              </label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"git-address\\\" placeholder=\\\"Repository Git URL\\\"\\n                  formControlName=\\\"git_address\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.get('git_address').errors }\\\">\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.get('git_address').errors\\\">\\n                  Please provide a valid Git URL\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-2\\\" for=\\\"git-address\\\">\\n                Project address\\n              </label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"project-address\\\" placeholder=\\\"Project URL\\\" formControlName=\\\"project_address\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && form.get('project_address').errors }\\\">\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.get('project_address').errors\\\">\\n                  Please provide a valid project URL (could be the same as the git url)\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col\\\">\\n                <a class=\\\"btn btn-block btn-outline-light\\\" href=\\\"{{ project.git_address }}\\\">\\n                  <i class=\\\"fab fa-fw fa-github\\\"></i> Go to GitHub\\n                </a>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-2\\\" for=\\\"status-active\\\">\\n                Status\\n              </label>\\n              <div class=\\\"col-sm-10\\\">\\n                <div class=\\\"custom-control custom-radio\\\">\\n                  <input type=\\\"radio\\\" id=\\\"status-active\\\" name=\\\"active\\\" class=\\\"custom-control-input\\\" [value]=\\\"true\\\"\\n                    formControlName=\\\"active\\\">\\n                  <label class=\\\"custom-control-label\\\" for=\\\"status-active\\\">Active</label>\\n                </div>\\n                <div class=\\\"custom-control custom-radio\\\">\\n                  <input type=\\\"radio\\\" id=\\\"status-inactive\\\" name=\\\"active\\\" class=\\\"custom-control-input\\\" [value]=\\\"false\\\"\\n                    formControlName=\\\"active\\\">\\n                  <label class=\\\"custom-control-label\\\" for=\\\"status-inactive\\\">Inactive</label>\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.get('active').errors\\\">\\n                    Please define if the project is active or not\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col-sm-10 offset-sm-2\\\">\\n                <a [routerLink]=\\\"['/repositories']\\\" class=\\\"btn btn-light\\\">\\n                  <i class=\\\"fas fa-fw fa-undo-alt\\\"></i>\\n                  Return\\n                </a>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">\\n                  <i class=\\\"fas fa-fw fa-save\\\"></i>\\n                  Save\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</main>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { GitProjectApiService } from 'src/app/services/api/git-project-api.service';\nimport { GitProject } from 'src/app/interfaces/git-project';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-add-repository',\n  templateUrl: './add-repository.component.html',\n  styleUrls: ['./add-repository.component.scss']\n})\nexport class AddRepositoryComponent implements OnInit {\n\n  public title = 'GitHub Trading';\n  public project: GitProject;\n  public form: FormGroup;\n  public loading = false;\n  public projectId: number;\n  public submitted = false;\n\n  constructor(private projectsApi: GitProjectApiService, private route: ActivatedRoute, private fb: FormBuilder, public toastr: ToastrService, public router: Router) {\n  }\n\n  ngOnInit() {\n    const urlRegexp = '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?';\n    this.project = {\n      active: true,\n      git_address: null,\n      project_address: null,\n      name: null\n    };\n    this.form = this.fb.group({\n      \"name\": [this.project.name, [\n        Validators.required,\n      ]],\n      \"git_address\": [this.project.git_address, [\n        Validators.required,\n        Validators.pattern(urlRegexp)\n      ]],\n      \"project_address\": [this.project.project_address, [\n        Validators.required,\n        Validators.pattern(urlRegexp)\n      ]],\n      \"active\": [this.project.active, [\n        Validators.required,\n      ]]\n    });\n  }\n\n  async submitForm() {\n    const formValue = this.form.value;\n    this.submitted = true;\n    console.log(this.form.valid, this.form.errors);\n    if (this.form.valid) {\n      this.projectsApi.create(formValue).toPromise().then((data) => {\n        console.log(\"success\", data);\n        this.toastr.success(\"The data have been saved successfully\", \"Data saved\");\n        this.router.navigate([\"/repositories\"]);\n      }).catch(error => {\n        console.log(error);\n        this.toastr.error(\"An error occurred while saving your data\", error);\n      });\n    }\n\n  }\n\n}\n","module.exports = \"<main class=\\\"container-fluid page-main-content\\\">\\n  <div class=\\\"row align-items-stretch\\\">\\n    <app-sidebar></app-sidebar>\\n    <div class=\\\"col-12 col-md-8 col-lg-10\\\">\\n      <h1 class=\\\"title\\\">\\n        Edit repository\\n      </h1>\\n      <app-loading [visible]=\\\"project === null\\\"></app-loading>\\n      <form *ngIf=\\\"project\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitForm()\\\" [ngClass]=\\\"{'submitted': submitted}\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-2\\\" for=\\\"git-name\\\">\\n                Git name\\n              </label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"git-name\\\" placeholder=\\\"Repository name\\\" formControlName=\\\"name\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && form.get('name').errors }\\\">\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.get('name').errors\\\">\\n                  Git name is required\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-2\\\" for=\\\"git-address\\\">\\n                Git address\\n              </label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"git-address\\\" placeholder=\\\"Repository Git URL\\\"\\n                  formControlName=\\\"git_address\\\" [ngClass]=\\\"{ 'is-invalid': submitted && form.get('git_address').errors }\\\">\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.get('git_address').errors\\\">\\n                  Please provide a valid Git URL\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-2\\\" for=\\\"git-address\\\">\\n                Project address\\n              </label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"project-address\\\" placeholder=\\\"Project URL\\\" formControlName=\\\"project_address\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && form.get('project_address').errors }\\\">\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.get('project_address').errors\\\">\\n                  Please provide a valid project URL (could be the same as the git url)\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col\\\">\\n                <a class=\\\"btn btn-block btn-outline-light\\\" href=\\\"{{ project.git_address }}\\\">\\n                  <i class=\\\"fab fa-fw fa-github\\\"></i> Go to GitHub\\n                </a>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-2\\\" for=\\\"status-active\\\">\\n                Status\\n              </label>\\n              <div class=\\\"col-sm-10\\\">\\n                <div class=\\\"custom-control custom-radio\\\">\\n                  <input type=\\\"radio\\\" id=\\\"status-active\\\" name=\\\"active\\\" class=\\\"custom-control-input\\\" [value]=\\\"true\\\"\\n                    formControlName=\\\"active\\\">\\n                  <label class=\\\"custom-control-label\\\" for=\\\"status-active\\\">Active</label>\\n                </div>\\n                <div class=\\\"custom-control custom-radio\\\">\\n                  <input type=\\\"radio\\\" id=\\\"status-inactive\\\" name=\\\"active\\\" class=\\\"custom-control-input\\\" [value]=\\\"false\\\"\\n                    formControlName=\\\"active\\\">\\n                  <label class=\\\"custom-control-label\\\" for=\\\"status-inactive\\\">Inactive</label>\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.get('active').errors\\\">\\n                    Please define if the project is active or not\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col-sm-10 offset-sm-2\\\">\\n                <a [routerLink]=\\\"['/repositories']\\\" class=\\\"btn btn-light\\\">\\n                  <i class=\\\"fas fa-fw fa-undo-alt\\\"></i>\\n                  Return\\n                </a>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">\\n                  <i class=\\\"fas fa-fw fa-save\\\"></i>\\n                  Save\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</main>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { GitProjectApiService } from 'src/app/services/api/git-project-api.service';\nimport { GitProject } from 'src/app/interfaces/git-project';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-edit-repository',\n  templateUrl: './edit-repository.component.html',\n  styleUrls: ['./edit-repository.component.scss']\n})\nexport class EditRepositoryComponent implements OnInit {\n\n  public title = 'GitHub Trading';\n  public project: GitProject;\n  public form: FormGroup;\n  public loading = false;\n  public projectId: number;\n  public submitted = false;\n\n  constructor(private projectsApi: GitProjectApiService, private route: ActivatedRoute, private fb: FormBuilder, public toastr: ToastrService, public router: Router) {\n  }\n\n  ngOnInit() {\n    const urlRegexp = '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?';\n\n    this.projectId = this.route.snapshot.params[\"id\"];\n    this.projectsApi.get(this.projectId).subscribe((project) => {\n      this.project = project;\n      this.form = this.fb.group({\n        \"name\": [this.project.name, [\n          Validators.required,\n        ]],\n        \"git_address\": [this.project.git_address, [\n          Validators.required,\n          Validators.pattern(urlRegexp)\n        ]],\n        \"project_address\": [this.project.project_address, [\n          Validators.required,\n          Validators.pattern(urlRegexp)\n        ]],\n        \"active\": [this.project.active, [\n          Validators.required,\n        ]]\n      });\n    });\n  }\n\n  async submitForm() {\n    const formValue = this.form.value;\n    this.submitted = true;\n\n    if (this.form.valid) {\n      this.projectsApi.update(this.projectId, formValue).toPromise().then((data) => {\n        console.log(\"success\", data);\n        this.toastr.success(\"The data have been saved successfully\", \"Data saved\");\n        this.router.navigate([\"/repositories\"]);\n      }).catch(error => {\n        console.log(error);\n        this.toastr.error(\"An error occurred while saving your data\", error);\n      });\n    }\n  }\n}\n","module.exports = \"<main class=\\\"container-fluid page-main-content\\\">\\n  <div class=\\\"row align-items-stretch\\\">\\n    <app-sidebar></app-sidebar>\\n    <div class=\\\"col-12 col-md-8 col-lg-10\\\">\\n      <h1 class=\\\"title\\\">\\n        Manage repositories\\n        <a class=\\\"btn btn-light float-right\\\" [routerLink]=\\\"['/repositories/add']\\\" [routerLinkActive]=\\\"['active']\\\">\\n          <i class=\\\"fas fa-fw fa-plus\\\"></i> Add new\\n        </a>\\n      </h1>\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-hover table-striped table-dark\\\">\\n          <thead>\\n            <tr>\\n              <th>Git name</th>\\n              <th>GitHub address</th>\\n              <th>Project total tokens</th>\\n              <th class=\\\"actions\\\">Actions</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <app-loading [visible]=\\\"projects === null\\\"></app-loading>\\n            <tr *ngFor=\\\"let project of projects\\\">\\n              <td>\\n                {{ project[0].name }}\\n              </td>\\n              <td>\\n                <a href=\\\"{{ project[0].git_address }}\\\" target=\\\"_blank\\\">\\n                  {{ project[0].git_address }}\\n                </a>\\n              </td>\\n              <td>\\n                {{ project[0].project_value }} <i class=\\\"fas fa-fw fa-coins\\\"></i>\\n              </td>\\n              <td class=\\\"actions\\\">\\n                <a [routerLink]=\\\"['/repositories/edit', project[0].id]\\\" class=\\\"btn btn-sm btn-warning\\\">\\n                  <i class=\\\"fas fa-fw fa-pencil-alt\\\"></i> Edit\\n                </a>\\n                <a href=\\\"javascript:;\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteItem(project[0].id)\\\">\\n                  <i class=\\\"fas fa-fw fa-trash\\\"></i> Remove\\n                </a>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <!-- <nav aria-label=\\\"Repositories navigation\\\">\\n        <ul class=\\\"pagination justify-content-center\\\">\\n          <li class=\\\"page-item disabled\\\">\\n            <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Previous\\\">\\n              <span aria-hidden=\\\"true\\\">\\n                <i class=\\\"fas fa-fw fa-caret-left\\\"></i>\\n              </span>\\n              <span class=\\\"sr-only\\\">Previous</span>\\n            </a>\\n          </li>\\n          <li class=\\\"page-item disabled\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">1</a></li>\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n          <li class=\\\"page-item\\\">\\n            <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Next\\\">\\n              <span aria-hidden=\\\"true\\\">\\n                <i class=\\\"fas fa-fw fa-caret-right\\\"></i>\\n              </span>\\n              <span class=\\\"sr-only\\\">Next</span>\\n            </a>\\n          </li>\\n        </ul>\\n      </nav> -->\\n    </div>\\n  </div>\\n</main>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { GitProjectApiService } from '../services/api/git-project-api.service';\nimport { GitProject } from '../interfaces/git-project';\nimport { ToastrService } from 'ngx-toastr';\nimport 'bootbox';\n@Component({\n  selector: 'app-repositories',\n  templateUrl: './repositories.component.html',\n  styleUrls: ['./repositories.component.scss']\n})\nexport class RepositoriesComponent implements OnInit {\n\n  title = 'GitHub Trading';\n\n  public projects: Array<GitProject> = null;\n\n  constructor(private projectsApi: GitProjectApiService, public toastr: ToastrService) {\n  }\n\n  private removeProjectFromList(projectId: number) {\n    this.projects = this.projects.filter((el) => {\n      return el.id !== projectId\n    });\n  }\n  public deleteItem(projectId: number) {\n    let self = this;\n    bootbox.confirm(\"Do you really want to remove this project ?\", (confirmation) => {\n      if (confirmation) {\n        this.removeProjectFromList(projectId);\n        this.projectsApi.delete(projectId).toPromise().then(data => {\n          self.toastr.success(\"The project was removed successfully.\");\n        }).catch(err => {\n          self.toastr.error(\"This project can't be removed.\");\n        });\n      }\n    });\n  }\n\n  public ngOnInit() {\n    this.projectsApi.getAll().subscribe((projects) => {\n      this.projects = projects;\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from './auth/auth.guard';\n\nimport { LoginComponent } from './login/login.component';\nimport { RepositoriesComponent } from './repositories/repositories.component';\nimport { AddRepositoryComponent } from './repositories/add-repository/add-repository.component';\nimport { EditRepositoryComponent } from './repositories/edit-repository/edit-repository.component';\nimport { AuctionsComponent } from './auctions/auctions.component';\nimport { ProjectAuctionComponent } from './auctions/project-auction/project-auction.component';\nimport { CallbackComponent } from './login/callback/callback.component';\nimport { UsersComponent } from './users/users.component';\nimport { UserShowComponent } from './user-show/user-show.component';\nimport { LogoutComponent } from './logout/logout.component';\n\n/**\n * Route constant\n */\nconst routes: Routes = [\n\n  { path: 'login', component: LoginComponent },\n  { path: 'logout', component: LogoutComponent },\n  { path: 'callback', component: CallbackComponent },\n  { path: 'repositories', component: RepositoriesComponent, canActivate: [AuthGuard] },\n  { path: 'repositories/add', component: AddRepositoryComponent, canActivate: [AuthGuard] },\n  { path: 'repositories/edit/:id', component: EditRepositoryComponent, canActivate: [AuthGuard] },\n  { path: 'auctions', component: AuctionsComponent },\n  { path: 'auctions/project/:id', component: ProjectAuctionComponent },\n  { path: 'users', component: UsersComponent, canActivate: [AuthGuard], data: { expectedRole: 'ROLE_ADMIN' } },\n  { path: 'users/show/:username', component: UserShowComponent },\n  { path: '**', redirectTo: 'auctions' },\n];\n\n/**\n * Routing module\n */\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  providers: [\n    AuthGuard\n  ],\n  exports: [RouterModule]\n})\nexport class RoutingModule {\n}\n","import { Injectable } from '@angular/core';\nimport { BackendApiService } from './backend-api.service';\nimport { Observable } from 'rxjs';\nimport { Contribution } from 'src/app/interfaces/contribution';\nimport { GitProject } from 'src/app/interfaces/git-project';\nimport { User } from 'src/app/interfaces/user';\n\ninterface contributionSearch {\n  project?: GitProject,\n  user?: User\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiContributionService {\n\n  constructor(private backendApi: BackendApiService) { }\n\n  public getAll(search: contributionSearch): Observable<Array<Contribution>> {\n    return this.backendApi.get(\"contributions\", {\n      \"project\": search.project ? search.project.id : null,\n      \"user\": search.user ? search.user.id : null\n    });\n  }\n\n  public get(id: number): Observable<Contribution> {\n    return this.backendApi.get(`contributions/${id}`);\n  }\n\n  public update(id: number, data: Contribution): Observable<Contribution> {\n    return this.backendApi.update(`contributions/${id}`, data);\n  }\n\n  public create(data: Contribution): Observable<Contribution> {\n    return this.backendApi.post(`contributions`, data);\n  }\n\n  public delete(id: number): Observable<any> {\n    return this.backendApi.delete(`contributions/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BackendApiService } from './backend-api.service';\nimport { Observable } from 'rxjs';\nimport { PurchaseOffer } from 'src/app/interfaces/purchase-offer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiPurchaseOfferService {\n\n  constructor(private backendApi: BackendApiService) { }\n\n  public getAll(projectId: number): Observable<Array<PurchaseOffer>> {\n    return this.backendApi.get(\"purchase-offers\", {\n      \"project\": projectId\n    });\n  }\n\n  public get(id: number): Observable<PurchaseOffer> {\n    return this.backendApi.get(`purchase-offers/${id}`);\n  }\n\n  public update(id: number, data: PurchaseOffer): Observable<PurchaseOffer> {\n    return this.backendApi.update(`purchase-offers/${id}`, data);\n  }\n\n  public create(data: PurchaseOffer): Observable<PurchaseOffer> {\n    return this.backendApi.post(`purchase-offers`, data);\n  }\n\n  public delete(id: number): Observable<any> {\n    return this.backendApi.delete(`purchase-offers/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BackendApiService } from './backend-api.service';\nimport { Observable } from 'rxjs';\nimport { SellOffer } from 'src/app/interfaces/sell-offer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiSellOfferService {\n\n  constructor(private backendApi: BackendApiService) { }\n\n  public getAll(projectId: number): Observable<Array<SellOffer>> {\n    return this.backendApi.get(\"sell-offers\", {\n      \"project\": projectId\n    });\n  }\n\n  public get(id: number): Observable<SellOffer> {\n    return this.backendApi.get(`sell-offers/${id}`);\n  }\n\n  public update(id: number, data: SellOffer): Observable<SellOffer> {\n    return this.backendApi.update(`sell-offers/${id}`, data);\n  }\n\n  public buy(data): Observable<SellOffer> {\n    return this.backendApi.update(`sell-offers/${data.sell_offer}/buy`, data);\n  }\n\n  public create(data: SellOffer): Observable<SellOffer> {\n    return this.backendApi.post(`sell-offers`, data);\n  }\n\n  public delete(id: number): Observable<any> {\n    return this.backendApi.delete(`sell-offers/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BackendApiService } from './backend-api.service';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiUserService {\n\n  constructor(private backendApi: BackendApiService) { }\n\n  public getAll(): Observable<Array<User>> {\n    return this.backendApi.get(\"users\");\n  }\n\n  public get(username: string): Observable<User> {\n    return this.backendApi.get(`users/${username}`);\n  }\n\n  public update(id: number, data: User): Observable<User> {\n    return this.backendApi.update(`users/${id}`, data);\n  }\n\n  public create(data: User): Observable<User> {\n    return this.backendApi.post(`users`, data);\n  }\n\n  public blacklist(id: number): Observable<any> {\n    return this.backendApi.post(`users/${id}/blacklist`, {});\n  }\n\n  public getMe() {\n    return this.backendApi.get('user/me');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackendApiService {\n  private environment = null;\n  private endpoint = null;\n  constructor(private http: HttpClient) {\n    this.environment = JSON.parse(localStorage.getItem(\"APP_SETTINGS\"));\n    this.endpoint = this.environment.baseAPIUrl;\n  }\n\n\n  // public get(apiUrl: string, parameters?: object): Observable<any> {\n\n  //   return this.http.get(endpoint + apiUrl, this.httpOptions(parameters)).pipe(\n  //     map(this.extractData));\n  // }\n\n  private httpOptions(parameters?: object) {\n    let headers = {\n      'Content-Type': 'application/json',\n    };\n    let token = localStorage.getItem(this.environment.localStorageJWT);\n    if (token) {\n      headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n\n    let httpHeaders = new HttpHeaders(headers);\n    let params = new HttpParams();\n    if (parameters) {\n      for (let parameter in parameters) {\n        params.append(parameter, parameters[parameter]);\n      }\n    }\n    return {\n      headers: httpHeaders\n    };\n  }\n\n  private extractData(res: Response) {\n    return res || {};\n  }\n\n  private generateQueryString(params?: object): string {\n    if (params) {\n      return \"?\" + Object.keys(params).map(key => key + '=' + params[key]).join('&');\n    }\n    return \"\";\n  }\n\n  public get(apiUrl: string, parameters?: object): Observable<any> {\n    return this.http.get(this.endpoint + apiUrl + this.generateQueryString(parameters), this.httpOptions())\n      .pipe(\n        map(this.extractData),\n        catchError((err: HttpErrorResponse) => {\n          console.log(err)\n          return of(false);\n        })\n      );\n  }\n\n  public post(apiUrl: string, data: any): Observable<any> {\n    return this.http.post<any>(this.endpoint + apiUrl, JSON.stringify(data), this.httpOptions()).pipe(\n    );\n  }\n\n  public update(apiUrl: string, data: any): Observable<any> {\n    return this.http.put(this.endpoint + apiUrl, JSON.stringify(data), this.httpOptions()).pipe(\n    );\n  }\n\n  public delete(apiUrl: string): Observable<any> {\n    return this.http.delete<any>(this.endpoint + apiUrl, this.httpOptions()).pipe(\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BackendApiService } from './backend-api.service';\nimport { Observable } from 'rxjs';\nimport { GitProject } from 'src/app/interfaces/git-project';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GitProjectApiService {\n\n  constructor(private backendApi: BackendApiService) { }\n\n  public getAll(): Observable<Array<GitProject>> {\n    return this.backendApi.get(\"git-projects\");\n  }\n\n  public get(id: number): Observable<GitProject> {\n    return this.backendApi.get(`git-projects/${id}`);\n  }\n\n  public update(id: number, data: GitProject): Observable<GitProject> {\n    return this.backendApi.update(`git-projects/${id}`, data);\n  }\n\n  public create(data: GitProject): Observable<GitProject> {\n    return this.backendApi.post(`git-projects`, data);\n  }\n\n  public delete(id: number): Observable<any> {\n    return this.backendApi.delete(`git-projects/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BackendApiService } from \"./backend-api.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private backendApi: BackendApiService) { }\n\n  public getMe() {\n    console.log(\"GET ME !!!\");\n    return this.backendApi.get('user/me');\n  }\n}\n","module.exports = \"<aside class=\\\"sidebar col-12\\\">\\n  <h3>Sidebar</h3>\\n  <nav class=\\\"sidebar-nav\\\">\\n    <ul class=\\\"nav flex-column\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/auctions']\\\" [routerLinkActive]=\\\"['active']\\\">\\n          <i class=\\\"fas fa-fw fa-gavel\\\"></i> Auctions\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\" [routerLink]=\\\"['/repositories']\\\" [routerLinkActive]=\\\"['active']\\\" *ngIf=\\\"authGuard.hasTheRole(currentUser, 'ROLE_ADMIN')\\\">\\n          <i class=\\\"fab fa-fw fa-github\\\"></i> Manage repositories\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authGuard.hasTheRole(currentUser, 'ROLE_ADMIN')\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/users']\\\" [routerLinkActive]=\\\"['active']\\\">\\n          <i class=\\\"fas fa-fw fa-user\\\"></i> Manage users\\n        </a>\\n      </li>\\n    </ul>\\n  </nav>\\n</aside>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { User } from '../interfaces/user';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  public currentUser: User;\n\n  constructor(public authGuard: AuthGuard, public authService: AuthService) { }\n\n  ngOnInit() {\n    this.currentUser = localStorage.getItem(\"CURRENT_USER\") ? JSON.parse(localStorage.getItem(\"CURRENT_USER\")) : null;\n    this.authService.authenticationEvent.subscribe(user => {\n      this.currentUser = user;\n    });\n  }\n\n}\n","module.exports = \"<table class=\\\"table table-hover table-striped table-dark\\\">\\n  <thead>\\n    <tr>\\n      <th>Date</th>\\n      <th *ngIf=\\\"!currentProject\\\">Project</th>\\n      <th>Commit</th>\\n      <th>Value</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let contribution of currentContributions\\\">\\n      <td>\\n        {{ contribution.calculation_utc_datetime }}\\n      </td>\\n\\n      <td *ngIf=\\\"!currentProject\\\">\\n        {{ contribution.git_project.name }}\\n      </td>\\n      <td>\\n        <a href=\\\"{{ contribution.git_project.git_address }}/commit/{{ contribution.commit_id }}\\\">\\n          #{{ contribution.commit_id }}\\n        </a>\\n      </td>\\n      <td>\\n        <i class=\\\"fas fa-fw fa-coins\\\"></i>\\n        {{ contribution.transaction.nb_tokens }}\\n      </td>\\n    </tr>\\n  </tbody>\\n  <tfoot>\\n    <tr>\\n      <th colspan=\\\"2\\\" class=\\\"text-right\\\">\\n        Total\\n      </th>\\n      <th>\\n        <i class=\\\"fas fa-fw fa-coins\\\"></i>\\n        {{ (contributionsSum() || 0) |number : '1.2-4' }}\\n        (owned: {{ (currentProject?.own_value || 0) | number: '1.2-4'}})\\n      </th>\\n    </tr>\\n  </tfoot>\\n</table>\"","module.exports = \"\"","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { ApiContributionService } from 'src/app/services/api/api-contribution.service';\nimport { Contribution } from 'src/app/interfaces/contribution';\nimport { GitProject } from 'src/app/interfaces/git-project';\nimport { User } from 'src/app/interfaces/user';\n\n@Component({\n  selector: 'app-table-contributions',\n  templateUrl: './contributions.component.html',\n  styleUrls: ['./contributions.component.scss']\n})\nexport class ContributionsComponent implements OnInit {\n  public currentContributions: Array<Contribution>;\n  @Input(\"git-project\") currentProject: GitProject;\n  @Input(\"user\") user: User;\n\n  constructor(private contributionApi: ApiContributionService) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.refreshContributions();\n  }\n\n  public refreshContributions() {\n    if (this.currentProject || this.user) {\n      this.contributionApi.getAll({\n        project: this.currentProject ? this.currentProject : null,\n        user: this.user ? this.user : null,\n      }).toPromise().then(contributions => {\n        this.currentContributions = contributions;\n      });\n    }\n  }\n\n  public contributionsSum() {\n    if (this.currentContributions) {\n      return this.currentContributions.reduce(function (x, contribution) {\n        return x + contribution.transaction.nb_tokens\n      }, 0);\n    }\n    return 0;\n  }\n}\n","module.exports = \"<main class=\\\"container-fluid page-main-content\\\">\\n  <div class=\\\"row align-items-stretch\\\">\\n    <app-sidebar></app-sidebar>\\n    <div class=\\\"col-12 col-md-8 col-lg-10\\\">\\n      <h1 class=\\\"title\\\" *ngIf=\\\"user\\\">\\n        {{ user.username }}'s profile\\n      </h1>\\n\\n\\n      <form *ngIf=\\\"user\\\" class=\\\"mb-sm-3\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Username</label>\\n              <p>{{ user.username }}</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Github Id</label>\\n              <p>{{ user.github_id }}</p>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <a class=\\\"btn btn-block btn-outline-primary\\\" href=\\\"https://github.com/{{ user.username }}\\\" target=\\\"_blank\\\"><i\\n                class=\\\"fab fa-fw fa-github\\\"></i>\\n              View profile on Github </a>\\n          </div>\\n        </div>\\n\\n      </form>\\n\\n      <h2>Contributions</h2>\\n      <app-table-contributions [user]=\\\"user\\\"></app-table-contributions>\\n\\n    </div>\\n  </div>\\n</main>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ApiUserService } from '../services/api/api-user.service';\nimport { User } from '../interfaces/user';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-show',\n  templateUrl: './user-show.component.html',\n  styleUrls: ['./user-show.component.scss']\n})\nexport class UserShowComponent implements OnInit {\n\n  public user: User;\n\n  constructor(private apiUser: ApiUserService, private toastr: ToastrService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    let username = this.route.snapshot.params[\"username\"];\n    this.apiUser.get(username).toPromise().then(user => {\n      this.user = user;\n    }).catch(err => {\n      this.toastr.error(\"Unable to fetch the users\", \"An error occurred\");\n    })\n  }\n\n}\n","module.exports = \"<main class=\\\"container-fluid page-main-content\\\">\\n  <div class=\\\"row align-items-stretch\\\">\\n    <app-sidebar></app-sidebar>\\n    <div class=\\\"col-12 col-md-8 col-lg-10\\\">\\n      <h1 class=\\\"title\\\">\\n        Manage users\\n      </h1>\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-hover table-striped table-dark\\\">\\n          <thead>\\n            <tr>\\n              <th>Username</th>\\n              <th>Email</th>\\n              <th>Github ID</th>\\n              <th>Timezone</th>\\n              <th>Role</th>\\n              <th>Active</th>\\n              <th>Blacklisted</th>\\n              <th class=\\\"actions\\\">Actions</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let user of users\\\">\\n              <td>\\n                <a href=\\\"https://github.com/{{ user.username }}\\\" target=\\\"_blank\\\">\\n                  {{user.username}}\\n                </a>\\n              </td>\\n              <td>\\n                {{user.email}}\\n              </td>\\n              <td>\\n                {{user.github_id}}\\n              </td>\\n              <td>\\n                {{user.timezone}}\\n              </td>\\n              <td>\\n                {{user.role}}\\n              </td>\\n              <td>\\n                {{user.active}}\\n              </td>\\n              <td>\\n                {{user.black_listed}}\\n              </td>\\n              <td class=\\\"actions\\\">\\n                <a [routerLink]=\\\"['/users/show', user.username]\\\" class=\\\"btn btn-sm btn-warning\\\">\\n                  <i class=\\\"fas fa-fw fa-pencil-alt\\\"></i> Display\\n                </a>\\n                <a href=\\\"#\\\" class=\\\"btn btn-sm btn-danger\\\">\\n                  <i class=\\\"fas fa-fw fa-trash\\\"></i> Blacklist\\n                </a>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <!-- <nav aria-label=\\\"Repositories navigation\\\">\\n        <ul class=\\\"pagination justify-content-center\\\">\\n          <li class=\\\"page-item disabled\\\">\\n            <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Previous\\\">\\n              <span aria-hidden=\\\"true\\\">\\n                <i class=\\\"fas fa-fw fa-caret-left\\\"></i>\\n              </span>\\n              <span class=\\\"sr-only\\\">Previous</span>\\n            </a>\\n          </li>\\n          <li class=\\\"page-item disabled\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">1</a></li>\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n          <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n          <li class=\\\"page-item\\\">\\n            <a class=\\\"page-link\\\" href=\\\"#\\\" aria-label=\\\"Next\\\">\\n              <span aria-hidden=\\\"true\\\">\\n                <i class=\\\"fas fa-fw fa-caret-right\\\"></i>\\n              </span>\\n              <span class=\\\"sr-only\\\">Next</span>\\n            </a>\\n          </li>\\n        </ul>\\n      </nav> -->\\n    </div>\\n  </div>\\n</main>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiUserService } from '../services/api/api-user.service';\nimport { User } from '../interfaces/user';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n    selector: 'app-users',\n    templateUrl: './users.component.html',\n    styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n    public users: Array<User>;\n\n    constructor(private http: HttpClient, private apiUser: ApiUserService, private toastr: ToastrService) { }\n\n    ngOnInit() {\n        this.apiUser.getAll().toPromise().then(users => {\n            this.users = users;\n        }).catch(err => {\n            this.toastr.error(\"Unable to fetch the users\", \"An error occurred\");\n        })\n    }\n\n}\n","import { environment as defaultEnvironment } from './environment';\n\nexport const environmentLoader = new Promise<any>((resolve, reject) => {\n    var xmlhttp = new XMLHttpRequest(),\n        method = 'GET',\n        url = './assets/environments/environment.json?date=' + new Date().getTime();\n    xmlhttp.open(method, url, true);\n    xmlhttp.onload = function () {\n        if (xmlhttp.status === 200) {\n            resolve(JSON.parse(xmlhttp.responseText));\n        } else {\n            resolve(defaultEnvironment);\n        }\n    };\n    xmlhttp.send();\n});","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    baseUrl: 'http://localhost:8000',\n    baseAPIUrl: 'http://localhost:8000/api/v1/',\n    githubAuth: {\n        URL: 'https://github.com/login/oauth/authorize',\n        CLIENT_ID: 'Iv1.54319c9b16b131e3',\n        CLIENT_DOMAIN: 'github-trading.eu.auth0.com',\n        REDIRECT_URI: 'http://localhost:4200/callback',\n        SCOPE: 'user user:email repo'\n    },\n    localStorageJWT: 'git-trading-jwt'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { environmentLoader as environmentLoaderPromise } from './environments/environment-loader';\n\nenvironmentLoaderPromise.then(env => {\n  if (env.production) {\n    enableProdMode();\n    if (window) {\n      window.console.log = function () { };\n    }\n  }\n\n  environment.production = env.production;\n  environment.baseUrl = env.baseUrl;\n  environment.baseAPIUrl = env.baseAPIUrl;\n  environment.githubAuth = env.githubAuth;\n  environment.localStorageJWT = env.localStorageJWT;\n  localStorage.setItem(\"APP_SETTINGS\", JSON.stringify(environment));\n\n  platformBrowserDynamic().bootstrapModule(AppModule);\n});\n"],"sourceRoot":""}